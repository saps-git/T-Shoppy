{"ast":null,"code":"import { API } from \"../../backend\";\nimport { cartEmpty } from \"../../core/helper/cartHelper\";\nexport const signup = user => {\n  return fetch(`${API}user/`, {\n    //hitting the API\n    method: \"POST\",\n    // method\n    headers: {\n      // have to write, when sending data in JSON format\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(user) // data that is being sent\n\n  }).then(response => {\n    // fetching the response\n    return response.json(); // returning in json format\n  }).catch(err => console.log(err)); // if we get an error\n};\nexport const signin = user => {\n  const formData = new FormData(); //when want to send as a form data\n\n  for (const name in user) {\n    // to add any other field\n    formData.append(name, user[name]); // appending that data(name) in that particular field in user (user[name])\n  }\n  /*\n  \n  */\n\n\n  return fetch(`${API}user/login/`, {\n    method: \"POST\",\n    body: formData\n  }).then(response => {\n    console.log(\"SUCCESS\", response);\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const authenticate = (data, next) => {\n  if (typeof window !== undefined) {\n    localStorage.setItem(\"jwt\", JSON.stringify(data)); //data will be the token we \n\n    next();\n  }\n};\nexport const isAuthenticated = () => {\n  if (typeof window == undefined) {\n    return false;\n  }\n\n  if (localStorage.getItem(\"jwt\")) {\n    return JSON.parse(localStorage.getItem(\"jwt\"));\n  } else {\n    return false;\n  }\n};\nexport const signout = next => {\n  const userId = isAuthenticated && isAuthenticated().user.id;\n  console.log(\"USERID: \", userId);\n\n  if (typeof window !== undefined) {\n    localStorage.removeItem(\"jwt\");\n    cartEmpty(() => {}); //next();\n\n    return fetch(`${API}user/logout/${userId}`, {\n      method: \"GET\"\n    }).then(response => {\n      console.log(\"Signout success\");\n      next();\n    }).catch(err => console.log(err));\n  }\n};","map":{"version":3,"sources":["/home/saptarshi/Projects/tshoppy/frontend/ecom/src/auth/helper/index.js"],"names":["API","cartEmpty","signup","user","fetch","method","headers","Accept","body","JSON","stringify","then","response","json","catch","err","console","log","signin","formData","FormData","name","append","authenticate","data","next","window","undefined","localStorage","setItem","isAuthenticated","getItem","parse","signout","userId","id","removeItem"],"mappings":"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","sourcesContent":["import { API } from \"../../backend\"\nimport { cartEmpty } from \"../../core/helper/cartHelper\"\n\nexport const signup = (user) => {\n    return fetch(`${API}user/`, { //hitting the API\n        method : \"POST\", // method\n        headers: { // have to write, when sending data in JSON format\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(user) // data that is being sent\n    })\n    .then((response) => { // fetching the response\n        return response.json() // returning in json format\n    })\n    .catch((err) => console.log(err)) // if we get an error\n}\n\nexport const signin = (user) => {\n    const formData = new FormData() //when want to send as a form data\n\n    for(const name in user){ // to add any other field\n        formData.append(name, user[name]) // appending that data(name) in that particular field in user (user[name])\n    }\n\n    /*\n    \n    */\n\n    return fetch(`${API}user/login/`, {\n        method: \"POST\",\n        body: formData,\n      })\n        .then((response) => {\n          console.log(\"SUCCESS\", response);\n          return response.json();\n        })\n        .catch((err) => console.log(err));\n    }\n\nexport const authenticate = (data, next) => {\n    if(typeof window !== undefined){\n        localStorage.setItem(\"jwt\", JSON.stringify(data)) //data will be the token we \n        next()\n    }\n}\n\nexport const isAuthenticated = () => {\n    if(typeof window == undefined) {\n        return false\n    }\n    if(localStorage.getItem(\"jwt\")){\n        return JSON.parse(localStorage.getItem(\"jwt\"))\n    }\n    else{\n        return false\n    }\n}\n\nexport const signout = (next) => {\n    const userId = isAuthenticated && isAuthenticated().user.id\n    console.log(\"USERID: \", userId)\n\n    if (typeof window !== undefined) {\n        localStorage.removeItem(\"jwt\");\n        cartEmpty(() => {});\n        //next();\n    \n        return fetch(`${API}user/logout/${userId}`, {method: \"GET\",})\n          .then((response) => {\n            console.log(\"Signout success\");\n            next();\n          })\n          .catch((err) => console.log(err));\n      }\n}"]},"metadata":{},"sourceType":"module"}